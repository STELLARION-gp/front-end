@use '../abstracts/variables' as *;

// Keyframes for loading spinner
@keyframes spin {
  0% {
    transform: rotate(0deg);
  }

  100% {
    transform: rotate(360deg);
  }
}

.btn {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font-family: $font-outfit;
  font-weight: 600;
  text-transform: uppercase;
  cursor: pointer;
  border: 2px solid;
  border-radius: $radius-md;
  text-decoration: none;
  background-size: 300%;
  transition: all 0.6s ease;
  overflow: hidden;

  // Size variants
  &.btn--small {
    height: 36px;
    padding: 0 16px;
    font-size: $font-size-sm;
    min-width: 80px;
  }

  &.btn--medium {
    height: 48px;
    padding: 0 24px;
    font-size: $font-size-base;
    min-width: 120px;
  }

  &.btn--large {
    height: 56px;
    padding: 0 32px;
    font-size: $font-size-lg;
    min-width: 160px;
  }

  &.btn--full-width {
    width: 100%;
    min-width: unset;
  }

  .btn__content {
    position: relative;
    z-index: 10;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    font-weight: 600;
    text-align: center;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .btn__icon {
    position: relative;
    z-index: 10;
    display: flex;
    align-items: center;

    &.btn__icon--left {
      margin-right: 8px;
    }

    &.btn__icon--right {
      margin-left: 8px;
    }
  }

  .btn__spinner {
    position: relative;
    z-index: 10;
    width: 16px;
    height: 16px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: spin 1s linear infinite;
    margin-right: 8px;
  }

  // Button variants with sliding gradient effects
  &.btn--primary {
    color: $text-light;
    border-color: $text-light;
    background-color: transparent;
    background-image: linear-gradient(120deg, transparent 50%, $theme3 50%);

    .btn__circle {
      position: absolute;
      width: 0;
      height: 0;
      background-color: $text-light;
      border-radius: 50%;
      transform: translate(-50%, -50%);
      transition: width 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94),
        height 0.4s cubic-bezier(0.25, 0.46, 0.45, 0.94);
      z-index: 1;
      pointer-events: none;
      --circle-size: 0px;
      will-change: width, height;

      &.circle-expand {
        width: var(--circle-size);
        height: var(--circle-size);
      }

      &.circle-shrink {
        width: 0;
        height: 0;
        transition: width 0.25s cubic-bezier(0.55, 0.06, 0.68, 0.19),
          height 0.25s cubic-bezier(0.55, 0.06, 0.68, 0.19);
      }
    }

    &:hover:not(:disabled):not(.btn--disabled) {

      .btn__content,
      .btn__icon,
      .btn__spinner {
        color: $theme1;
        transition: color 0.25s ease 0.1s;
        z-index: 2;
        position: relative;
      }
    }

    &:not(:hover) {

      .btn__content,
      .btn__icon,
      .btn__spinner {
        color: $text-light;
        transition: color 0.15s ease;
        z-index: 2;
        position: relative;
      }
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.1rem, 0.1rem);
      box-shadow: 0px 5px 15px -10px rgba($theme3, 0.6);

      .btn__circle {
        transform: translate(-50%, -50%) scale(0.98);
        transition: transform 0.1s ease;
      }
    }
  }

  &.btn--secondary {
    color: $theme2;
    border-color: $theme2;
    background-image: linear-gradient(160deg, $text-light 50%, $theme2 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $text-light;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba($theme2, 0.75);
    }
  }

  &.btn--success {
    color: #10b981;
    border-color: #10b981;
    background-image: linear-gradient(120deg, $text-light 50%, #10b981 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $text-light;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba(#10b981, 0.75);
    }
  }

  &.btn--warning {
    color: #f59e0b;
    border-color: #f59e0b;
    background-image: linear-gradient(160deg, $text-light 50%, #f59e0b 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $text-light;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba(#f59e0b, 0.75);
    }
  }

  &.btn--danger {
    color: #ef4444;
    border-color: #ef4444;
    background-image: linear-gradient(120deg, $text-light 50%, #ef4444 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $text-light;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba(#ef4444, 0.75);
    }
  }

  &.btn--border {
    color: $theme4;
    border-color: $theme4;
    background-image: linear-gradient(160deg, transparent 50%, rgba($theme4, 0.1) 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $theme3;
      border-color: $theme3;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba($theme4, 0.4);
    }
  }

  // White variant (for dark backgrounds)
  &.white-true {
    color: $theme1;
    border-color: $text-light;
    background-image: linear-gradient(120deg, $theme1 50%, $text-light 50%);

    &:hover:not(:disabled):not(.btn--disabled) {
      color: $theme1;
      background-position: 100%;
      transform: translateX(0.5rem);
    }

    &:active:not(:disabled):not(.btn--disabled) {
      transform: translate(0.5rem, 0.5rem);
      box-shadow: 0px 10px 20px -15px rgba($text-light, 0.5);
    }

    .btn__content,
    .btn__icon,
    .btn__spinner {
      color: inherit;
    }

    .btn__spinner {
      border-top-color: currentColor;
    }
  }

  // Disabled state
  &:disabled,
  &.btn--disabled {
    opacity: 0.5;
    cursor: not-allowed;
    transform: none !important;
    box-shadow: none !important;
    background-position: 0% !important;

    &:hover {
      box-shadow: none;
      transform: none;
      background-position: 0%;
    }

    &:active {
      transform: none;
      box-shadow: none;
    }
  }

  // Focus state for accessibility
  &:focus-visible {
    outline: 2px solid $accent-color;
    outline-offset: 2px;
  }

  // Loading state
  &.btn--loading {
    pointer-events: none;

    .btn__content {
      opacity: 0.7;
    }
  }
}